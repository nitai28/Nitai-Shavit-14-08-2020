{"version":3,"sources":["components/Navbar.js","components/ItemsTable.js","services/dataService.js","components/StoreTable.js","routes/ReceivedList.js","components/AddItemModalForm.js","routes/BoughtItems.js","store/actions/boughtAction.js","App.js","store/reducers/boughtReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Header","Layout","Navbar","className","defaultSelectedKeys","theme","mode","Item","key","icon","ShoppingCartOutlined","to","ShoppingOutlined","ItemTable","tableData","withReceivedBtn","handleReceived","currencyType","usdToIls","useState","dataSource","setDataSource","columns","title","dataIndex","render","date","moment","unix","format","item","shape","type","onClick","_","useEffect","length","data","forEach","index","itemObj","name","store","onlineStore","price","priceInNIS","Math","round","deliveryEstDate","action","push","sort","a","b","buildTableData","slice","StoreTable","tableDataMap","Map","has","set","get","tableDataArray","value","storeName","totalOrdersSum","buildStoreTableData","style","connect","state","bought","receivedItems","usdToNis","chosenCurrency","setChosenCurrency","currentValueUsdToNis","setCurrentValueUsdToNis","onChange","checkedChildren","unCheckedChildren","defaultChecked","AddItemModalForm","showModal","closeModal","onFormSubmit","Form","useForm","form","visible","okText","okButtonProps","htmlType","onCancel","labelCol","span","wrapperCol","layout","id","size","onFinish","validateFields","then","values","resetFields","rules","required","label","min","Option","Date","now","message","disabledDate","currentDate","items","dispatch","moveItemFromBoughtToReceived","receivedItem","getState","payload","updatedBoughtItems","filter","updatedReceivedItems","addBoughtItem","openAddItemModal","setOpenAddItemModal","handleAddNewItem","useCallback","newItem","itemName","PlusOutlined","apiError","calculateCurrentUsd","fetch","method","res","json","rates","ILS","toFixed","catch","clearError","interval","setInterval","clearInterval","error","content","marginTop","fontSize","exact","component","ReceivedList","path","BoughtItems","from","initState","boughtReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.737d5fa4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Menu, Layout} from 'antd';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    ShoppingCartOutlined,\r\n    ShoppingOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst {Header} = Layout;\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <Header>\r\n                <Menu defaultSelectedKeys={[\"list\"]} theme={\"dark\"}\r\n                      mode=\"horizontal\">\r\n                    <Menu.Item key=\"list\" icon={<ShoppingCartOutlined/>}>\r\n                        <NavLink to=\"/list\">Store</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"received\" icon={<ShoppingOutlined/>}>\r\n                        <NavLink to=\"/received\">received</NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Button, Table} from 'antd';\r\nimport moment from 'moment';\r\nimport '../styles/ItemTable.css'\r\nimport {buildTableData} from \"../services/dataService\";\r\n\r\nconst ItemTable = ({tableData = [], withReceivedBtn = false, handleReceived = () => null, currencyType, usdToIls}) => {\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Online Store',\r\n            dataIndex: 'store',\r\n            key: 'store',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: 'Delivery Est Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            render: (date) => {\r\n                return (<span>{moment.unix(date / 1000).format('DD/MM/YYYY')}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (item) => (\r\n                <Button shape={\"round\"} type=\"primary\" onClick={_ => handleReceived(item)}>\r\n                    Received\r\n                </Button>\r\n\r\n            )\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        if (tableData.length > 0) {\r\n            setDataSource(buildTableData(tableData, withReceivedBtn, currencyType, usdToIls))\r\n        } else setDataSource([])\r\n\r\n    }, [tableData, withReceivedBtn, currencyType, usdToIls]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {dataSource &&\r\n            <Table\r\n                dataSource={dataSource}\r\n                columns={withReceivedBtn ? columns : columns.slice(0, columns.length - 1)}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ItemTable;\r\n","export const buildStoreTableData = (data, currencyType, usdToIls) => {\r\n    let tableDataMap = new Map();\r\n    data.forEach(item => {\r\n        if (tableDataMap.has(item.onlineStore)) {\r\n            tableDataMap.set(item.onlineStore, tableDataMap.get(item.onlineStore) + Math.round(item.priceInNIS))\r\n        } else tableDataMap.set(item.onlineStore, Math.round(item.priceInNIS))\r\n    });\r\n    let tableDataArray = [];\r\n    tableDataMap.forEach((value, key) => {\r\n        tableDataArray.push(\r\n            {\r\n                storeName: key,\r\n                totalOrdersSum: currencyType === 'ILS' ? value + ' ₪' : Math.round(value / usdToIls) + ' $',\r\n                key\r\n            })\r\n    });\r\n    return tableDataArray\r\n};\r\n\r\nexport const buildTableData = (tableData, withReceivedBtn, currencyType, usdToIls) => {\r\n    let data = [];\r\n    tableData.forEach((item, index) => {\r\n        let itemObj = {\r\n            key: index,\r\n            name: item.name,\r\n            store: item.onlineStore,\r\n            price: currencyType === 'ILS' ? item.priceInNIS + ' ₪' : Math.round(item.priceInNIS / usdToIls) + ' $',\r\n            date: item.deliveryEstDate\r\n        };\r\n        if (withReceivedBtn) {\r\n            itemObj.action = item\r\n        }\r\n        data.push(itemObj)\r\n    });\r\n    return data.sort((a, b) => a.date - b.date);\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Table} from 'antd';\r\nimport {buildStoreTableData} from '../services/dataService'\r\n\r\nconst StoreTable = ({tableData = [], currencyType, usdToIls}) => {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const columns = [\r\n        {\r\n            title: 'Store Name',\r\n            dataIndex: 'storeName',\r\n            key: 'storeName',\r\n        },\r\n        {\r\n            title: 'Total Items Sum',\r\n            dataIndex: 'totalOrdersSum',\r\n            key: 'totalOrdersSum',\r\n        }\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        if (tableData.length > 0) {\r\n            setDataSource(buildStoreTableData(tableData, currencyType, usdToIls))\r\n        } else setDataSource([])\r\n    }, [tableData, currencyType, usdToIls])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {dataSource &&\r\n            <Table style={{\"width\": \"50vw\", \"margin\": \"35px auto\"}}\r\n                   dataSource={dataSource}\r\n                   columns={columns}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StoreTable;\r\n","import React, {useEffect, useState} from 'react';\r\nimport ItemTable from \"../components/ItemsTable\";\r\nimport StoreTable from \"../components/StoreTable\";\r\nimport {connect} from \"react-redux\";\r\nimport {Switch} from \"antd\";\r\n\r\nconst ReceivedList = ({receivedItems, usdToNis}) => {\r\n    const [chosenCurrency, setChosenCurrency] = useState('ILS');\r\n    const [currentValueUsdToNis, setCurrentValueUsdToNis] = useState(usdToNis)\r\n\r\n    useEffect(() => {\r\n        setCurrentValueUsdToNis(usdToNis)\r\n    }, [usdToNis]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Received items</h1>\r\n            <div style={{\"margin\": \"15px\"}}>\r\n                <Switch\r\n                    onChange={(value) => setChosenCurrency(value ? 'ILS' : 'USD')}\r\n                    checkedChildren=\"₪ ILS\"\r\n                    unCheckedChildren=\"$ USD\"\r\n                    defaultChecked/>\r\n            </div>\r\n            <ItemTable\r\n                usdToIls={currentValueUsdToNis}\r\n                currencyType={chosenCurrency}\r\n                tableData={receivedItems}/>\r\n            <StoreTable\r\n                usdToIls={currentValueUsdToNis}\r\n                currencyType={chosenCurrency}\r\n                tableData={receivedItems}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    let {receivedItems, usdToNis} = state.bought;\r\n    return {\r\n        receivedItems,\r\n        usdToNis\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReceivedList);\r\n","import React from 'react';\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    DatePicker,\r\n    InputNumber,\r\n} from 'antd';\r\nimport moment from \"moment\";\r\n\r\nconst AddItemModalForm = ({showModal, closeModal, onFormSubmit}) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const handleFinishForm = () => {\r\n        form.validateFields()\r\n            .then((values) => {\r\n                values.deliveryEstDate = moment(values.deliveryEstDate).unix() * 1000;\r\n                onFormSubmit(values);\r\n                form.resetFields();\r\n                closeModal();\r\n            })\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Add new item\"\r\n                visible={showModal}\r\n                okText=\"submit\"\r\n                okButtonProps={{form: 'add-item-form', key: 'submit', htmlType: 'submit'}}\r\n                onCancel={closeModal}\r\n            >\r\n                <Form\r\n                    labelCol={{span: 12,}}\r\n                    wrapperCol={{span: 14}}\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    id='add-item-form'\r\n                    size={\"small\"}\r\n                    onFinish={handleFinishForm}\r\n                >\r\n                    <Form.Item name=\"itemName\" rules={[{required: true}]} label=\"Item name\">\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"storeName\" rules={[{required: true}]} label=\"Store name\">\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"price\"\r\n                               rules={[{\r\n                                   required: true, type: \"number\",\r\n                                   min: 1,\r\n                               }]}\r\n                               label=\"Price\">\r\n                        <InputNumber/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"currencyType\"\r\n                               rules={[{required: true}]}\r\n                               label=\"Currency\">\r\n                        <Select>\r\n                            <Select.Option value=\"usd\">$(USD)</Select.Option>\r\n                            <Select.Option value=\"nis\">₪(ILS)</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"deliveryEstDate\"\r\n                               rules={[{\r\n                                   required: true,\r\n                                   type: \"date\",\r\n                                   min: Date.now(),\r\n                                   message: \"date must be later then now\"\r\n                               }]}\r\n                               label=\"Delivery EST Date\">\r\n                        <DatePicker disabledDate={(currentDate) => moment(currentDate).unix() < Date.now() / 1000}/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddItemModalForm;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ItemTable from \"../components/ItemsTable\";\r\nimport StoreTable from \"../components/StoreTable\";\r\nimport AddItemModalForm from \"../components/AddItemModalForm\";\r\nimport {Button, Switch} from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\nimport {addBoughtItem, updateReceivedAndBoughtList} from \"../store/actions/boughtAction\";\r\n\r\n\r\nconst BoughtItems = ({items, moveItemFromBoughtToReceived, addBoughtItem, usdToNis}) => {\r\n    const [openAddItemModal, setOpenAddItemModal] = useState(false);\r\n    const [chosenCurrency, setChosenCurrency] = useState('ILS');\r\n    const [currentValueUsdToNis, setCurrentValueUsdToNis] = useState(usdToNis)\r\n\r\n\r\n    const handleReceived = (item) => {\r\n        moveItemFromBoughtToReceived(item)\r\n    };\r\n\r\n    const handleAddNewItem = useCallback((item) => {\r\n        const {itemName: name, storeName: onlineStore, deliveryEstDate} = item;\r\n        let newItem = {\r\n            name,\r\n            onlineStore,\r\n            deliveryEstDate,\r\n            priceInNIS: item.currencyType === 'usd' ? Math.round(item.price * usdToNis) : item.price,\r\n            id: Date.now()\r\n        };\r\n        addBoughtItem(newItem)\r\n    }, [usdToNis, addBoughtItem]);\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentValueUsdToNis(usdToNis)\r\n    }, [usdToNis]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AddItemModalForm\r\n                onFormSubmit={handleAddNewItem}\r\n                closeModal={() => setOpenAddItemModal(false)}\r\n                showModal={openAddItemModal}/>\r\n\r\n            <h1>Bought items</h1>\r\n            <Button onClick={() => setOpenAddItemModal(true)} type=\"primary\" icon={<PlusOutlined/>}>\r\n                Add item\r\n            </Button>\r\n            <div style={{\"margin\": \"15px\"}}>\r\n                <Switch\r\n                    onChange={(value) => setChosenCurrency(value ? 'ILS' : 'USD')}\r\n                    checkedChildren=\"₪ ILS\"\r\n                    unCheckedChildren=\"$ USD\"\r\n                    defaultChecked/>\r\n            </div>\r\n            <ItemTable\r\n                usdToIls={currentValueUsdToNis}\r\n                currencyType={chosenCurrency}\r\n                handleReceived={handleReceived}\r\n                withReceivedBtn tableData={items}/>\r\n            <StoreTable\r\n                usdToIls={currentValueUsdToNis}\r\n                currencyType={chosenCurrency}\r\n                tableData={items}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    let {items, usdToNis} = state.bought;\r\n    return {\r\n        items,\r\n        usdToNis\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        moveItemFromBoughtToReceived: (item) => dispatch(updateReceivedAndBoughtList(item)),\r\n        addBoughtItem: (item) => dispatch(addBoughtItem(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoughtItems);\r\n","const Api_URL = \"https://api.exchangeratesapi.io/latest?base=USD&symbols=ILS\";\r\n\r\nexport const updateReceivedAndBoughtList = (receivedItem) => {\r\n    return (dispatch, getState) => {\r\n        let updatedBoughtItems = getState().bought.items.filter(item => item.id !== receivedItem.id);\r\n        let updatedReceivedItems = [...getState().bought.receivedItems, receivedItem];\r\n        dispatch({type: 'UPDATE_RECEIVED_AND_BOUGHT_LIST', payload: {updatedBoughtItems, updatedReceivedItems}});\r\n    }\r\n}\r\n\r\nexport const addBoughtItem = (item) => {\r\n    return (dispatch) => {\r\n        dispatch({type: 'ADD_NEW_BOUGHT_ITEM', payload: item});\r\n    }\r\n};\r\n\r\nexport const calculateCurrentUsd = () => {\r\n    return (dispatch) => {\r\n        fetch(Api_URL, {method: 'GET'}).then(res => res.json()).then(res => {\r\n            dispatch({type: 'UPDATE_USD_TO_NIS', payload: +res.rates.ILS.toFixed(2)});\r\n        }).catch(_ => {\r\n            dispatch({type: 'UPDATE_API_ERROR'});\r\n        })\r\n    }\r\n};\r\n\r\nexport const clearError = () => {\r\n    return (dispatch) => {\r\n        dispatch({type: 'CLEAR_API_ERROR'});\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ReceivedList from \"./routes/ReceivedList\";\r\nimport BoughtItems from \"./routes/BoughtItems\";\r\nimport {connect} from \"react-redux\";\r\nimport {calculateCurrentUsd, clearError} from \"./store/actions/boughtAction\";\r\nimport {message} from 'antd';\r\n\r\nconst App = ({calculateCurrentUsd, apiError, clearError}) => {\r\n\r\n    useEffect(() => {\r\n        calculateCurrentUsd();\r\n        const interval = setInterval(() => calculateCurrentUsd(), 10000);\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [calculateCurrentUsd]);\r\n\r\n    useEffect(() => {\r\n        if (apiError) {\r\n            message.error({\r\n                    content: apiError,\r\n                    className: 'custom-class',\r\n                    style: {\r\n                        marginTop: '10vh',\r\n                        fontSize: \"18px\"\r\n                    },\r\n                },\r\n                6,\r\n            );\r\n            clearError();\r\n        }\r\n    }, [apiError, clearError]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <div>\r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route exact component={ReceivedList} path=\"/received\"/>\r\n                        <Route exact component={BoughtItems} path=\"/list\"/>\r\n                        <Route path=\"/\">\r\n                            <Redirect from=\"/\" to=\"list\"/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        apiError: state.bought.apiError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        calculateCurrentUsd: () => dispatch(calculateCurrentUsd()),\r\n        clearError: () => dispatch(clearError())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const initState = {\r\n    items: [{\r\n        id: 1,\r\n        name: \"iPhone 11\",\r\n        onlineStore: \"amazon\",\r\n        priceInNIS: 3350,\r\n        deliveryEstDate: 1597300125117\r\n    }, {\r\n        id: 2,\r\n        name: \"Samsung U65\",\r\n        onlineStore: \"ebay\",\r\n        priceInNIS: 500,\r\n        deliveryEstDate: 1597395965183\r\n    }, {\r\n        id: 3,\r\n        name: \"LG TV\",\r\n        onlineStore: \"ebay\",\r\n        priceInNIS: 1500,\r\n        deliveryEstDate: 1596666965183\r\n    }],\r\n    receivedItems: [],\r\n    usdToNis: 0,\r\n    apiError: ''\r\n};\r\n\r\nconst boughtReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_RECEIVED_AND_BOUGHT_LIST':\r\n            return {\r\n                ...state,\r\n                items: action.payload.updatedBoughtItems,\r\n                receivedItems: action.payload.updatedReceivedItems,\r\n\r\n            };\r\n        case 'ADD_NEW_BOUGHT_ITEM':\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload]\r\n            };\r\n\r\n        case 'UPDATE_USD_TO_NIS':\r\n            return {\r\n                ...state,\r\n                usdToNis: action.payload\r\n            };\r\n\r\n        case 'UPDATE_API_ERROR':\r\n            return {\r\n                ...state,\r\n                apiError: 'Failed to update currency rate'\r\n            };\r\n\r\n        case 'CLEAR_API_ERROR':\r\n            return {\r\n                ...state,\r\n                apiError: ''\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boughtReducer;\r\n","import {combineReducers} from 'redux';\r\nimport boughtReducer from './boughtReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    bought: boughtReducer,\r\n\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}